@use "sass:map";
@use "@angular/material" as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);

  $primary-palette: map.get($color-config, "primary");
  $accent-palette: map.get($color-config, "accent");
  $warn-palette: map.get($color-config, "warn");


  .highlight {
    background: linear-gradient(
      -45deg,
      mat.get-color-from-palette($primary-palette, 200) 0,
      #fff 20%
    ) !important;
  }
  .choose {
    background: linear-gradient(
      45deg,
      mat.get-color-from-palette($accent-palette, 200) 0,
      #fff 20%
    );
  }
  .turn {
    background: linear-gradient(
      45deg,
      mat.get-color-from-palette($accent-palette, 800) 0,
      #fff 50%
    ) !important;
  }
  [color="primary"] {
    color: mat.get-color-from-palette($primary-palette, 50) !important;
  }

  .spec-highlight {
    background: mat.get-color-from-palette($primary-palette, 600) !important;
    color: mat.get-color-from-palette($primary-palette, 50) !important;
  }

  .row:hover {
    background-color: mat.get-color-from-palette($primary-palette, 50);
  }
  .opened {
    background: linear-gradient(
      45deg,
      mat.get-color-from-palette($warn-palette, 200) 0,
      #fff 20%
    );
  }
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config {
    @include typography($theme);
  }
}
